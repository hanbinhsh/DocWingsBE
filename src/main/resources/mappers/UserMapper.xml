<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.filemanager.docwingsbe.mapper.UserMapper">
    <insert id="insertUser">
        insert into user (user_name, psw, email, group_id, is_admin, phone)
        values(#{user.userName}, #{user.psw}, #{user.email}, #{user.groupId}, #{user.isAdmin}, #{user.phone})
    </insert>
    <insert id="insertGroup">
        insert into usergroup (group_name, auth)
        values (#{groupName},#{auth})
    </insert>
    <update id="updateUserName">
        update user
        set user_name = #{userName}
        where user_id = #{userId}
    </update>
    <update id="UpdatePassword">
        update user
        set psw=SHA2(#{newPassword},256)
        where user_id=#{userId}
    </update>
    <update id="UpdateEmail">
        update user
        set email=#{newEmail}
        where user_id=#{userId}
    </update>
    <update id="UpdatePhone">
        update user
        set phone=#{newPhone}
        where user_id=#{userId}
    </update>
    <update id="UpdateByAccountLockedTrueAndLockTimeBefore">
        UPDATE user
        SET account_locked = FALSE,
        lock_time = NULL,
        failed_attempts = 0
        WHERE
        TIMESTAMPDIFF(HOUR, lock_time, NOW()) > 2;
    </update>
    <update id="SaveUser">
        UPDATE user
        SET lock_time = NOW(),
        account_locked = #{accountLocked},
        failed_attempts = #{failedLoginAttempts}
        where user_id = #{userId}
    </update>
    <update id="resetPsw">
        update user
        set psw= SHA2(123456,256)
        where user_id = #{userId}
    </update>
    <update id="updateGroup">
        update user
        set group_id=#{groupId}
        where user_id = #{userId}
    </update>
    <update id="setFreezingTime">
        update user
        set lock_time = NOW() + INTERVAL #{time} HOUR,
            account_locked = true,
            failed_attempts = 5
        where user_id = #{userId}
    </update>
    <update id="updateUsersGroup">
        update user
        set group_id=2
        where group_id = #{groupId}
    </update>
    <delete id="UserDelete">
        delete from user
        where user_id=#{userId}
    </delete>
    <delete id="UserCollectionDelete">
        delete from collections
        where user_id=#{userId};
    </delete>
    <delete id="deleteUserByGroupId">
        delete from user
        where group_id=#{groupId}
    </delete>
    <select id="loginVerification" resultType="com.filemanager.docwingsbe.entity.User">
        SELECT * FROM docwingsdb.user WHERE user_name = #{userName} AND psw = SHA2(#{password},256)
    </select>
    <select id="findUserByName" resultType="com.filemanager.docwingsbe.entity.User">
        SELECT * FROM user
        WHERE user_name = #{userName};
    </select>
    <select id="selectUserByUserName" resultType="java.lang.String">
        select user_name from user where user_name = #{userName}
    </select>
    <select id="selectUserByEmail" resultType="java.lang.String">
        select email from user where email = #{email}
    </select>
    <select id="selectUserByPhone" resultType="java.lang.String">
        select phone from user where phone = #{phone}
    </select>
    <select id="findUserById" resultType="com.filemanager.docwingsbe.entity.User">
        SELECT * FROM user
        WHERE user_id = #{userId};
    </select>
    <select id="findGroupNameByUserId" resultType="java.lang.String">
        select group_name
        from usergroup
        join user on user.group_id=usergroup.group_id
        where user.user_id=#{userId}
    </select>
    <select id="findAllUsers" resultType="com.filemanager.docwingsbe.entity.multy.UserAndGroup">
        select user.user_name,
               user.user_id,
               user.group_id,
               user.phone,
               user.email,
               user.account_locked,
               usergroup.group_name,
               usergroup.auth
        from user
        join usergroup on user.group_id=usergroup.group_id
        where user.user_id!=-1;
    </select>
    <select id="findUserByEmail" resultType="com.filemanager.docwingsbe.entity.User">
        select *
        from user
        where user.email=#{email};
    </select>
    <select id="findUserByPhone" resultType="com.filemanager.docwingsbe.entity.User">
        select *
        from user
        where user.phone=#{phone};
    </select>
    <select id="findAuthByUserId" resultType="java.lang.Long">
        SELECT auth FROM usergroup,user WHERE usergroup.group_id = user.group_id AND user_id = #{userId}
    </select>

</mapper>